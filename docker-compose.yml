version: '3.8'

services:
  open-webui-discord-bot:
    # Use official Node.js image directly
    image: node:18-alpine
    container_name: open-webui-discord-bot
    restart: unless-stopped
    user: node # Use the built-in node user for security
    working_dir: /app
    env_file:
      - .env
    ports:
      - "${PORT:-3005}:${PORT:-3005}"
    # Command to run the application
    command: >
      sh -c "mkdir -p /app/logs &&
             if [ ! -d /app/node_modules ]; then
               echo 'Installing dependencies...' &&
               npm ci --only=production;
             else
               echo 'Using cached dependencies';
             fi &&
             echo 'Starting Discord bot...' &&
             node src/index.js"
    volumes:
      # Mount the application code from appdata
      - /mnt/user/appdata/open-webui-discord-bot/src:/app/src:ro
      - /mnt/user/appdata/open-webui-discord-bot/package.json:/app/package.json:ro
      - /mnt/user/appdata/open-webui-discord-bot/package-lock.json:/app/package-lock.json:ro
      
      # Persist node_modules for faster restarts
      - /mnt/user/appdata/open-webui-discord-bot/node_modules:/app/node_modules
      
      # Persist logs and runtime data
      - /mnt/user/appdata/open-webui-discord-bot/logs:/app/logs
    networks:
      - proxynet
    # Set reasonable resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
    # Health check
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:${PORT:-3005}/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 20s


networks:
  proxynet:
    external: true 